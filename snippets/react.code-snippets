{
  "React Component": {
		"prefix": "rfc",
		"body": [
			"type ${TM_FILENAME_BASE/([^-]+)(?:-|$)/${1:/capitalize}/g}Props = {$2}",
			"",
			"export const ${TM_FILENAME_BASE/([^-]+)(?:-|$)/${1:/capitalize}/g} = async (props: ${TM_FILENAME_BASE/([^-]+)(?:-|$)/${1:/capitalize}/g}Props) => {",
			"const { $3 } = props",
			"",
			"  return (",
			"    <div>$4<\/div>",
			"  )",
			"}",
		],
		"description": "React Component"
	},
  "Next.js App Router Layout": {
		"prefix": "rfcl",
		"body": [
			"import type { ReactNode } from 'react';",
			"",
			"export default async function ${TM_FILENAME_BASE/([^-]+)(?:-|$)/${1:/capitalize}/g}({ children }: { children: ReactNode }) {",
			"  return (",
			"    <div>$2{children}<\/div>",
			"  )",
			"}",
		],
		"description": "Next.js App Router用のLayoutコンポーネント"
	},
  "Next.js App Router Page": {
		"prefix": "rfcp",
		"body": [
			"export default async function ${TM_FILENAME_BASE/([^-]+)(?:-|$)/${1:/capitalize}/g}() {",
			"  return (",
			"    <div>$2<\/div>",
			"  )",
			"}",
		],
		"description": "Next.js App Router用のPageコンポーネント"
	},
  "React Component With Children": {
		"prefix": "rfcc",
		"body": [
			"const ${TM_FILENAME_BASE/([^-]+)(?:-|$)/${1:/capitalize}/g} = ({ children }: { children: React.ReactNode }) => {",
			"  return <div>$2{children}</div>;",
			"}",
			"export default ${TM_FILENAME_BASE/([^-]+)(?:-|$)/${1:/capitalize}/g};"
		],
		"description": "React Component"
	},
	"React Context & Provider": {
		"prefix": "rctx",
		"body": [
			"'use client';",
			"",
			"import {",
			"  ReactNode,",
			"  createContext,",
			"  useContext,",
			"  useState,",
			"} from 'react';",
			"",
			"type ContextType = {};",
			"",
			"const Context = createContext<ContextType>({} as ContextType);",
			"",
			"export const ${TM_FILENAME_BASE/([^-]+)(?:-|$)/${1:/capitalize}/g}Provider = ({ children }: { children: ReactNode }) = {",
			"  const [_, __] = useState<any>(1);",
			"",
			"  return (",
			"    <Context.Provider",
			"      value={{}}",
			"    >",
			"      {children}",
			"    </Context.Provider>",
			"  );",
			"}",
			"",
			"export const use${TM_FILENAME_BASE/([^-]+)(?:-|$)/${1:/capitalize}/g} = () => useContext(Context);",
		],
		"description": "React Context & Provider"
	},
	"React State": {
		"prefix": "rst",
		"body": [
			"const [$1, set${1/(.)/${1:/upcase}/}] = useState<$2>($3);",
		],
		"description": "React State"
	},
	"Arrow Function":{
		"prefix": "fn",
		"body": [
			"const $1 = () => {",
			"  ",
			"}",
		],
		"description": "Arrow Function"
	}
}
